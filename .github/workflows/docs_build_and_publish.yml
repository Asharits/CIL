on:
  release:
    types: [published]
  push:
    branches: [ master ]
    tags:
      - '**'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        path: CIL
        fetch-depth: 0
    - name: install cil
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential --fix-missing
        cd CIL
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=install
        sudo cmake --build . --target install
        cd install/lib
        echo "LD_LIBRARY_PATH=$(pwd)" >> $GITHUB_ENV
        cd ../../..
    - name: check variables
      run: echo "LD_LIBRARY_PATH var is ${{env.LD_LIBRARY_PATH}}"
    - name: Checkout cil-astra repo
      uses: actions/checkout@v2
      with:
        repository: TomographicImaging/CIL-ASTRA
        path: CIL-ASTRA
    - name: install CIL-ASTRA
      run: |
        cd CIL-ASTRA/Wrappers/Python
        sudo python setup.py install --prefix=/usr
    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "CIL/docs/"

    - name: make dummy ccpi module
      run: |
      sudo mkdir /usr/lib/python3.8/site-packages/ccpi/filters
      sudo touch /usr/lib/python3.8/site-packages/ccpi/__init__.py
      sudo touch /usr/lib/python3.8/site-packages/ccpi/filters/__init__.py
      sudo touch /usr/lib/python3.8/site-packages/ccpi/filters/regularisers.py

    # Create an artifact of the html output.
    - uses: actions/upload-artifact@v1
      with:
        name: DocumentationHTML
        path: CIL/docs/docs/build/html/
  
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download artifact of the html output.
      uses: actions/download-artifact@v2
      with:
        name: DocumentationHTML
        path: docs/docs/build/html/
    - name: Commit documentation changes
      run: |
        git clone https://github.com/TomographicImaging/CIL.git --branch gh-pages --single-branch gh-pages
        cp -r docs/build/html/* gh-pages/
        cd gh-pages
        touch .nojekyll
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation" -a || true
        # The above command will fail if no changes were present, so we ignore
        # that.
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
